.grid {
  --track-color: #2ecc71;
  position: relative;

  display: grid;
  place-content: center;
  grid-template: repeat(3, 1fr) / repeat(3, 1fr); /* shorthand for 3 cols and 3 rows */
  /* By default, each grid's size will be equivalent to its child element (see .item and .item-fit) */
}

.grid.red {
  --outline-color: red;
}

.grid.green {
  --outline-color: lime;
}

.item {
  width: 300px;
}

.item-fit {
  width: 300px;

  /* 
    To adjust the size of each grid that ALL of the grid is contained within the size of the child element
    then add the following 2 lines below:
  */
  grid-column: 1 / -1;
  grid-row: 1 / -1;
}

.mousetrack {
  position: absolute;
  inset: 0;
  outline: 2px solid var(--outline-color);
}

.mousetrack:nth-child(1) {
  grid-column: 1 / span 1; /* shorthand for grid-column-start and grid-column-end */
  grid-row: 1 / span 1; /* or grid-row: 1 / 2 (ends at the 2nd line) */
}

.mousetrack:nth-child(2) {
  grid-column: 2 / span 1; /* or grid-column: 2 / 3 (ends at the 3rd line) */
  grid-row: 1 / span 1;
}

.mousetrack:nth-child(3) {
  grid-column: 3 / span 1;
  grid-row: 1 / span 1;
}

.mousetrack:nth-child(4) {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}

.mousetrack:nth-child(5) {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

.mousetrack:nth-child(6) {
  grid-column: 3 / 4;
  grid-row: 2 / 3;
}

.mousetrack:nth-child(7) {
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}

.mousetrack:nth-child(8) {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}

.mousetrack:nth-child(9) {
  grid-column: 3 / 4;
  grid-row: 3 / 4;
}
